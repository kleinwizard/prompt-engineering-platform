{
  "name": "prompt-engineering-platform",
  "version": "1.0.0",
  "description": "Comprehensive Prompt Engineering Platform - Full Stack Implementation",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:api\" \"npm run dev:web\"",
    "dev:api": "cd apps/api && npm run start:dev",
    "dev:web": "cd apps/web && npm run dev",
    "dev:extension": "cd apps/extension && npm run dev",
    "build": "npm run build:api && npm run build:web",
    "build:api": "cd apps/api && npm run build",
    "build:web": "cd apps/web && npm run build",
    "build:prod": "NODE_ENV=production npm run build",
    "start": "concurrently \"npm run start:api\" \"npm run start:web\"",
    "start:api": "cd apps/api && npm run start:prod",
    "start:web": "cd apps/web && npm run start",
    "test": "npm run test:api && npm run test:web",
    "test:api": "cd apps/api && npm run test",
    "test:web": "cd apps/web && npm run test",
    "test:ci": "npm run test:api:ci && npm run test:web:ci",
    "test:api:ci": "cd apps/api && npm run test:ci",
    "test:web:ci": "cd apps/web && npm run test:ci",
    "lint": "npm run lint:api && npm run lint:web",
    "lint:api": "cd apps/api && npm run lint",
    "lint:web": "cd apps/web && npm run lint",
    "lint:check": "npm run lint:api:check && npm run lint:web:check",
    "lint:api:check": "cd apps/api && npm run lint:check",
    "lint:web:check": "cd apps/web && npm run lint:check",
    "type-check": "npm run type-check:api && npm run type-check:web",
    "type-check:api": "cd apps/api && npm run typecheck",
    "type-check:web": "cd apps/web && npm run type-check",
    "format": "npm run format:api && npm run format:web",
    "format:api": "cd apps/api && npm run format",
    "format:web": "cd apps/web && npm run format",
    "format:check": "npm run format:api:check && npm run format:web:check",
    "format:api:check": "cd apps/api && npm run format:check",
    "format:web:check": "cd apps/web && npm run format:check",
    "clean": "npm run clean:api && npm run clean:web && rimraf node_modules",
    "clean:api": "cd apps/api && npm run clean",
    "clean:web": "cd apps/web && npm run clean",
    "db:setup": "cd apps/api && npm run db:migrate && npm run db:seed",
    "db:migrate": "cd apps/api && npm run db:migrate",
    "db:seed": "cd apps/api && npm run db:seed",
    "db:reset": "cd apps/api && npm run db:reset",
    "db:studio": "cd apps/api && npm run db:studio",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:build": "docker-compose build",
    "docker:rebuild": "docker-compose build --no-cache",
    "deps:install": "npm install && npm run deps:install:api && npm run deps:install:web",
    "deps:install:api": "cd apps/api && npm install",
    "deps:install:web": "cd apps/web && npm install",
    "deps:check": "npm outdated && npm run deps:check:api && npm run deps:check:web",
    "deps:check:api": "cd apps/api && npm run deps:check",
    "deps:check:web": "cd apps/web && npm run deps:check",
    "security:audit": "npm audit && npm run security:audit:api && npm run security:audit:web",
    "security:audit:api": "cd apps/api && npm run security:audit",
    "security:audit:web": "cd apps/web && npm run security:audit",
    "health": "npm run health:api && npm run health:web",
    "health:api": "cd apps/api && npm run health",
    "health:web": "cd apps/web && npm run health",
    "validate": "npm run lint:check && npm run type-check && npm run test:ci",
    "precommit": "npm run validate",
    "setup": "npm run deps:install && npm run db:setup",
    "postinstall": "echo 'Platform dependencies installed successfully'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "rimraf": "^6.0.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}
